(undo-tree-save-format-version . 1)
"ed47080765cacd6e8fd039f047039b78f3cf5654"
[nil nil nil nil (25314 36460 950618 42000) 0 nil]
([nil nil ((nil rear-nonsticky nil 23 . 24) (nil fontified nil 1 . 24) (1 . 24) (t 25314 36434 546625 790000)) nil (25314 36460 950616 699000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -3) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("g" 0 1 (fontified t face elixir-atom-face)) . -4) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -5) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -6) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -7) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -8) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("x" 0 1 (fontified t face elixir-atom-face)) . -9) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -10) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("," 0 1 (fontified t)) . -11) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#(" " 0 1 (fontified t)) . -12) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -13) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#(">" 0 1 (fontified t face font-lock-string-face)) . -14) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("=" 0 1 (fontified t face font-lock-string-face)) . -15) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -16) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -17) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -18) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -19) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -20) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -21) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -22) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("}" 0 1 (fontified t rear-nonsticky t)) . -23) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . 1) (undo-tree-id95 . -1) 24) nil (25314 36460 950611 559000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23 . 24) (nil fontified nil 1 . 24) (1 . 24) (#(" " 0 1 (fontified t)) . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("{" 0 1 (fontified t)) . -2) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 3) nil (25314 36460 950580 751000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -3) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("g" 0 1 (fontified t face elixir-atom-face)) . -4) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -5) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -6) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -7) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -8) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("x" 0 1 (fontified t face elixir-atom-face)) . -9) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -10) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("," 0 1 (fontified t)) . -11) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t)) . -12) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -13) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#(">" 0 1 (fontified t face font-lock-string-face)) . -14) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("=" 0 1 (fontified t face font-lock-string-face)) . -15) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -16) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -17) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -18) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -19) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -20) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -21) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -22) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("}" 0 1 (fontified t rear-nonsticky t)) . -23) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . 1) (undo-tree-id47 . -1) 24) nil (25314 36460 950572 596000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("{" 0 1 (fontified t)) . -2) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 3) nil (25314 36460 950541 748000) 0 nil])
([nil nil ((nil rear-nonsticky nil 88 . 89) (nil fontified nil 88 . 89) (nil fontified nil 85 . 88) (nil fontified nil 84 . 85) (nil fontified nil 81 . 84) (nil fontified nil 79 . 81) (nil fontified nil 78 . 79) (nil fontified nil 72 . 78) (nil fontified nil 68 . 72) (nil fontified nil 67 . 68) (nil fontified nil 65 . 67) (nil fontified nil 64 . 65) (nil fontified nil 62 . 64) (nil fontified nil 56 . 62) (nil fontified nil 55 . 56) (nil fontified nil 52 . 55) (nil fontified nil 50 . 52) (nil fontified nil 49 . 50) (nil fontified nil 48 . 49) (nil fontified nil 39 . 48) (nil fontified nil 32 . 39) (nil fontified nil 30 . 32) (nil fontified nil 29 . 30) (nil fontified nil 27 . 29) (nil fontified nil 26 . 27) (nil fontified nil 19 . 26) (nil fontified nil 18 . 19) (nil fontified nil 11 . 18) (nil fontified nil 10 . 11) (nil fontified nil 1 . 10) (1 . 89)) nil (25314 36460 950518 33000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -44) (undo-tree-id96 . -1) 45 (t 25314 36460 950897 309000)) nil (25314 36474 452577 892000) 0 nil])
([nil nil ((47 . 50) (t 25314 36474 463036 277000)) nil (25314 36495 945995 602000) 0 nil])
([nil nil ((31 . 33) (#("  " 0 2 (fontified t)) . 30) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (32 . 33)) nil (25314 36495 945994 169000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -41) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("e" 0 1 (fontified t)) . -42) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("t" 0 1 (fontified t)) . -43) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("t" 0 1 (fontified t)) . -44) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("e" 0 1 (fontified t)) . -45) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("x" 0 1 (fontified t)) . -46) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("t" 0 1 (fontified t)) . -47) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) 48) nil (25314 36495 945989 60000) 0 nil])
([nil current ((41 . 48)) nil (25314 36495 945909 570000) 0 nil])
nil
