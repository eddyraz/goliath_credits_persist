(undo-tree-save-format-version . 1)
"6f5b6a033674e912577a94023fcf7fa5dacfa72b"
[nil nil nil nil (25314 35548 938378 812000) 0 nil]
([nil nil ((254 . 256) (#("  " 0 2 (fontified t)) . 253) (undo-tree-id3 . -2) (253 . 256) (#("  " 0 2 (fontified t)) . 252) (undo-tree-id4 . -2) (251 . 255) (t 25313 46664 342024 914000)) nil (25314 35548 938377 449000) 0 nil])
([nil nil ((254 . 256) (#("  " 0 2 (fontified nil)) . 253) (253 . 255) (253 . 254)) nil (25314 35548 938374 483000) 0 nil])
([nil nil ((nil rear-nonsticky nil 493 . 494) (nil fontified nil 493 . 494) (nil fontified nil 481 . 493) (nil fontified nil 480 . 481) (nil fontified nil 475 . 480) (nil fontified nil 472 . 475) (nil fontified nil 445 . 472) (nil fontified nil 444 . 445) (nil fontified nil 439 . 444) (nil fontified nil 436 . 439) (nil fontified nil 424 . 436) (nil fontified nil 423 . 424) (nil fontified nil 418 . 423) (nil fontified nil 415 . 418) (nil fontified nil 392 . 415) (nil fontified nil 391 . 392) (nil fontified nil 386 . 391) (nil fontified nil 383 . 386) (nil fontified nil 368 . 383) (nil fontified nil 367 . 368) (nil fontified nil 362 . 367) (nil fontified nil 358 . 362) (nil fontified nil 343 . 358) (nil fontified nil 342 . 343) (nil fontified nil 336 . 342) (nil fontified nil 330 . 336) (nil fontified nil 325 . 330) (nil fontified nil 323 . 325) (nil fontified nil 318 . 323) (nil fontified nil 316 . 318) (nil fontified nil 306 . 316) (nil fontified nil 305 . 306) (nil fontified nil 299 . 305) (nil fontified nil 296 . 299) (nil fontified nil 282 . 296) (nil fontified nil 281 . 282) (nil fontified nil 275 . 281) (nil fontified nil 271 . 275) (nil fontified nil 260 . 271) (nil fontified nil 259 . 260) (nil fontified nil 256 . 259) (256 . 494)) nil (25314 35548 938371 548000) 0 nil])
([nil nil ((#("  def hello do
    :world
  end
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 19 (fontified t) 19 25 (fontified t face elixir-atom-face) 25 26 (fontified t) 26 28 (fontified t) 28 31 (fontified t face font-lock-keyword-face) 31 32 (fontified t)) . 220) (undo-tree-id0 . -32) (undo-tree-id1 . -32) (undo-tree-id2 . -32) 252) nil (25314 35548 938363 342000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . 463) (463 . 465) (463 . 464)) nil (25314 35548 938347 272000) 0 nil])
([nil nil ((464 . 466) (#("  " 0 2 (fontified nil)) . 463) (463 . 465) (463 . 464)) nil (25314 35548 938344 497000) 0 nil])
([nil nil ((nil rear-nonsticky nil 497 . 498) (nil fontified nil 497 . 498) (nil fontified nil 494 . 497) (nil fontified nil 492 . 494) (nil fontified nil 491 . 492) (nil fontified nil 485 . 491) (nil fontified nil 480 . 485) (nil fontified nil 478 . 480) (nil fontified nil 477 . 478) (nil fontified nil 472 . 477) (nil fontified nil 471 . 472) (nil fontified nil 468 . 471) (nil fontified nil 466 . 468) (466 . 498)) nil (25314 35548 938339 377000) 0 nil])
([nil nil ((#("
  
" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t)) . -494) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (462 . 477) (#("
    def hello do
" 0 1 (fontified t) 1 3 (fontified t) 3 5 (fontified t) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t) 15 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t)) . -462) (undo-tree-id7 . -1) (undo-tree-id8 . -18) (undo-tree-id9 . -3) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -18) (undo-tree-id13 . -18) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("
" 0 1 (fontified t)) . -221) (t 25314 35548 933569 317000)) nil (25314 36268 833343 842000) 0 nil])
([nil nil ((318 . 326)) nil (25314 36268 833303 666000) 0 nil])
([nil nil ((326 . 338) (t 25314 36268 828922 784000)) nil (25314 36309 295989 825000) 0 nil])
([nil nil ((302 . 303) (t 25314 36309 333338 832000)) nil (25314 36319 531148 469000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -303) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 304 (t 25314 36319 541443 712000)) nil (25314 36333 489379 901000) 0 nil])
([nil nil ((302 . 303)) nil (25314 36333 489364 141000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -303) (undo-tree-id39 . -1) 304 (t 25314 36333 497587 108000)) nil (25314 36522 492335 910000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -318) (undo-tree-id19 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -319) (undo-tree-id20 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -320) (undo-tree-id21 . -1) (#("d" 0 1 (fontified t face font-lock-type-face)) . -321) (undo-tree-id22 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -322) (undo-tree-id23 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -323) (undo-tree-id24 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -324) (undo-tree-id25 . -1) (#("." 0 1 (fontified t face font-lock-type-face)) . -325) (undo-tree-id26 . -1) (#("P" 0 1 (fontified t face font-lock-type-face)) . -326) (undo-tree-id27 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -327) (undo-tree-id28 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -328) (undo-tree-id29 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -329) (undo-tree-id30 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -330) (undo-tree-id31 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -331) (undo-tree-id32 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -332) (undo-tree-id33 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -333) (undo-tree-id34 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -334) (undo-tree-id35 . -1) (#("c" 0 1 (fontified t face font-lock-type-face)) . -335) (undo-tree-id36 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -336) (undo-tree-id37 . -1) (#("." 0 1 (fontified t face font-lock-type-face)) . -337) (undo-tree-id38 . -1) 338) nil (25314 36522 492318 36000) 0 nil])
([nil nil ((463 . 465) (#("  " 0 2 (fontified t)) . 462) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (462 . 465) (#("  " 0 2 (fontified nil)) . 461) (461 . 463) (461 . 462) (t 25314 36522 503530 429000)) nil (25314 36540 117567 666000) 0 nil])
([nil nil ((463 . 465) (#("  " 0 2 (fontified nil)) . 462) (462 . 464) (462 . 463)) nil (25314 36540 117556 505000) 0 nil])
([nil nil ((nil rear-nonsticky nil 645 . 646) (nil fontified nil 644 . 646) (nil fontified nil 636 . 644) (nil fontified nil 634 . 636) (nil fontified nil 626 . 634) (nil fontified nil 624 . 626) (nil fontified nil 614 . 624) (nil fontified nil 612 . 614) (nil fontified nil 599 . 612) (nil fontified nil 597 . 599) (nil fontified nil 581 . 597) (nil fontified nil 579 . 581) (nil fontified nil 577 . 579) (nil fontified nil 565 . 577) (nil fontified nil 563 . 565) (nil fontified nil 551 . 563) (nil fontified nil 549 . 551) (nil fontified nil 536 . 549) (nil fontified nil 534 . 536) (nil fontified nil 533 . 534) (nil fontified nil 523 . 533) (nil fontified nil 521 . 523) (nil fontified nil 513 . 521) (nil fontified nil 511 . 513) (nil fontified nil 500 . 511) (nil fontified nil 498 . 500) (nil fontified nil 490 . 498) (nil fontified nil 488 . 490) (nil fontified nil 483 . 488) (nil fontified nil 481 . 483) (nil fontified nil 465 . 481) (465 . 646)) nil (25314 36540 117550 704000) 0 nil])
([nil nil ((648 . 650) (#("  " 0 2 (fontified t)) . 647) (undo-tree-id46 . -2) (647 . 650) (#("  " 0 2 (fontified nil)) . 646) (646 . 648) (646 . 647) (t 25314 36540 115711 632000)) nil (25314 38026 770662 350000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -658) (658 . 659) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -658) (658 . 659) (657 . 659) (#("\"" 0 1 (fontified nil syntax-table (15))) . -657) (650 . 658)) nil (25314 38026 770654 975000) 0 nil])
([nil nil ((658 . 663)) nil (25314 38026 770650 477000) 0 nil])
([nil nil ((664 . 667)) nil (25314 38026 770648 122000) 0 nil])
([nil nil ((669 . 673) (#("    " 0 4 (fontified t)) . 668) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (667 . 673)) nil (25314 38026 770644 946000) 0 nil])
([nil nil ((671 . 675)) nil (25314 38026 770634 546000) 0 nil])
([nil nil ((669 . 673) (#("    " 0 4 (fontified t)) . 668) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (667 . 673)) nil (25314 38026 770626 982000) 0 nil])
([nil nil ((671 . 678) (t 25314 38026 779935 35000)) nil (25314 38715 949877 133000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face elixir-atom-face)) . -676) (undo-tree-id54 . -1) 677) nil (25314 38715 949874 468000) 0 nil])
([nil nil ((676 . 677)) nil (25314 38715 949870 551000) 0 nil])
([nil nil ((677 . 682)) nil (25314 38715 949868 808000) 0 nil])
([nil nil ((682 . 687)) nil (25314 38715 949867 34000) 0 nil])
([nil nil ((687 . 699)) nil (25314 38715 949865 281000) 0 nil])
([nil nil ((691 . 692)) nil (25314 38715 949863 588000) 0 nil])
([nil nil ((698 . 700)) nil (25314 38715 949861 654000) 0 nil])
([nil nil ((700 . 702)) nil (25314 38715 949859 971000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face elixir-atom-face)) . -701) (undo-tree-id53 . -1) 702) nil (25314 38715 949857 647000) 0 nil])
([nil nil ((701 . 703)) nil (25314 38715 949853 629000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t face elixir-atom-face)) . -702) (undo-tree-id52 . -1) 703) nil (25314 38715 949851 135000) 0 nil])
([nil nil ((702 . 704)) nil (25314 38715 949846 827000) 0 nil])
([nil nil ((705 . 708)) nil (25314 38715 949845 94000) 0 nil])
([nil nil ((671 . 673) (708 . 709)) nil (25314 38715 949843 190000) 0 nil])
([nil nil ((715 . 736)) nil (25314 38715 949840 856000) 0 nil])
([nil nil ((736 . 743)) nil (25314 38715 949839 132000) 0 nil])
([nil nil ((743 . 754)) nil (25314 38715 949837 249000) 0 nil])
([nil nil ((754 . 759)) nil (25314 38715 949835 235000) 0 nil])
([nil nil ((759 . 764)) nil (25314 38715 949832 430000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -759) (undo-tree-id47 . -1) (#("i" 0 1 (fontified t)) . -760) (undo-tree-id48 . -1) (#("e" 0 1 (fontified t)) . -761) (undo-tree-id49 . -1) (#("l" 0 1 (fontified t)) . -762) (undo-tree-id50 . -1) (#("d" 0 1 (fontified t)) . -763) (undo-tree-id51 . -1) 764) nil (25314 38715 949822 882000) 0 nil])
([nil nil ((756 . 760) (#("    " 0 4 (fontified t)) . 755) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (759 . 760) (t 25314 38715 950961 709000)) nil (25314 39012 364152 620000) 0 nil])
([nil nil ((755 . 759)) nil (25314 39012 364148 722000) 0 nil])
([nil nil ((759 . 765)) nil (25314 39012 364147 941000) 0 nil])
([nil nil ((nil rear-nonsticky nil 780 . 781) (nil fontified nil 777 . 781) (nil fontified nil 776 . 777) (nil fontified nil 770 . 776) (770 . 781)) nil (25314 39012 364146 749000) 0 nil])
([nil nil ((nil rear-nonsticky nil 791 . 792) (nil fontified nil 788 . 792) (nil fontified nil 787 . 788) (nil fontified nil 781 . 787) (781 . 792)) nil (25314 39012 364145 296000) 0 nil])
([nil nil ((nil rear-nonsticky nil 802 . 803) (nil fontified nil 799 . 803) (nil fontified nil 798 . 799) (nil fontified nil 792 . 798) (792 . 803)) nil (25314 39012 364143 923000) 0 nil])
([nil nil ((nil rear-nonsticky nil 813 . 814) (nil fontified nil 810 . 814) (nil fontified nil 809 . 810) (nil fontified nil 803 . 809) (803 . 814)) nil (25314 39012 364142 521000) 0 nil])
([nil nil ((nil rear-nonsticky nil 824 . 825) (nil fontified nil 821 . 825) (nil fontified nil 820 . 821) (nil fontified nil 814 . 820) (814 . 825)) nil (25314 39012 364141 198000) 0 nil])
([nil nil ((nil rear-nonsticky nil 835 . 836) (nil fontified nil 832 . 836) (nil fontified nil 831 . 832) (nil fontified nil 825 . 831) (825 . 836)) nil (25314 39012 364139 866000) 0 nil])
([nil nil ((nil rear-nonsticky nil 846 . 847) (nil fontified nil 843 . 847) (nil fontified nil 842 . 843) (nil fontified nil 836 . 842) (836 . 847)) nil (25314 39012 364138 383000) 0 nil])
([nil nil ((nil rear-nonsticky nil 857 . 858) (nil fontified nil 854 . 858) (nil fontified nil 853 . 854) (nil fontified nil 847 . 853) (847 . 858)) nil (25314 39012 364137 50000) 0 nil])
([nil nil ((nil rear-nonsticky nil 868 . 869) (nil fontified nil 865 . 869) (nil fontified nil 864 . 865) (nil fontified nil 858 . 864) (858 . 869)) nil (25314 39012 364135 718000) 0 nil])
([nil nil ((nil rear-nonsticky nil 879 . 880) (nil fontified nil 876 . 880) (nil fontified nil 875 . 876) (nil fontified nil 869 . 875) (869 . 880)) nil (25314 39012 364134 84000) 0 nil])
([nil nil ((nil rear-nonsticky nil 890 . 891) (nil fontified nil 887 . 891) (nil fontified nil 886 . 887) (nil fontified nil 880 . 886) (880 . 891)) nil (25314 39012 364132 491000) 0 nil])
([nil nil ((nil rear-nonsticky nil 901 . 902) (nil fontified nil 898 . 902) (nil fontified nil 897 . 898) (nil fontified nil 891 . 897) (891 . 902)) nil (25314 39012 364131 49000) 0 nil])
([nil nil ((nil rear-nonsticky nil 912 . 913) (nil fontified nil 909 . 913) (nil fontified nil 908 . 909) (nil fontified nil 902 . 908) (902 . 913)) nil (25314 39012 364129 476000) 0 nil])
([nil nil ((679 . 680)) nil (25314 39012 364128 103000) 0 nil])
([nil nil ((722 . 723)) nil (25314 39012 364127 432000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 679)) nil (25314 39012 364126 460000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 721)) nil (25314 39012 364125 668000) 0 nil])
([nil nil ((765 . 766)) nil (25314 39012 364124 807000) 0 nil])
([nil nil ((764 . 765)) nil (25314 39012 364124 135000) 0 nil])
([nil nil ((766 . 787)) nil (25314 39012 364123 464000) 0 nil])
([nil nil ((787 . 788)) nil (25314 39012 364122 633000) 0 nil])
([nil nil ((788 . 798)) nil (25314 39012 364121 781000) 0 nil])
([nil nil ((809 . 810)) nil (25314 39012 364121 210000) 0 nil])
([nil nil ((821 . 822)) nil (25314 39012 364120 629000) 0 nil])
([nil nil ((833 . 834)) nil (25314 39012 364119 977000) 0 nil])
([nil nil ((845 . 846)) nil (25314 39012 364119 396000) 0 nil])
([nil nil ((857 . 858)) nil (25314 39012 364118 815000) 0 nil])
([nil nil ((869 . 870)) nil (25314 39012 364118 134000) 0 nil])
([nil nil ((881 . 882)) nil (25314 39012 364117 563000) 0 nil])
([nil nil ((893 . 894)) nil (25314 39012 364116 982000) 0 nil])
([nil nil ((905 . 906)) nil (25314 39012 364116 300000) 0 nil])
([nil nil ((917 . 918)) nil (25314 39012 364115 709000) 0 nil])
([nil nil ((929 . 930)) nil (25314 39012 364115 68000) 0 nil])
([nil nil ((941 . 942)) nil (25314 39012 364114 417000) 0 nil])
([nil nil ((953 . 954)) nil (25314 39012 364113 846000) 0 nil])
([nil nil ((811 . 821)) nil (25314 39012 364113 194000) 0 nil])
([nil nil ((821 . 824)) nil (25314 39012 364112 623000) 0 nil])
([nil nil ((824 . 829)) nil (25314 39012 364111 942000) 0 nil])
([nil nil ((841 . 844)) nil (25314 39012 364111 371000) 0 nil])
([nil nil ((844 . 849)) nil (25314 39012 364110 730000) 0 nil])
([nil nil ((849 . 859)) nil (25314 39012 364110 79000) 0 nil])
([nil nil ((871 . 874)) nil (25314 39012 364109 377000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face elixir-atom-face)) . -871) (undo-tree-id55 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -872) (undo-tree-id56 . -1) (#("m" 0 1 (fontified t face elixir-atom-face)) . -873) (undo-tree-id57 . -1) 874) nil (25314 39012 364107 764000) 0 nil])
([nil nil ((871 . 889)) nil (25314 39012 364095 40000) 0 nil])
([nil nil ((901 . 919)) nil (25314 39012 364094 88000) 0 nil])
([nil nil ((924 . 932) (886 . 894) (848 . 856) (795 . 803) (743 . 751) (693 . 701) 884) nil (25314 39012 364092 856000) 0 nil])
([nil nil ((967 . 975)) nil (25314 39012 364090 852000) 0 nil])
([nil nil ((987 . 1008)) nil (25314 39012 364090 80000) 0 nil])
([nil nil ((1008 . 1016)) nil (25314 39012 364088 928000) 0 nil])
([nil nil ((1016 . 1030)) nil (25314 39012 364085 351000) 0 nil])
([nil nil ((1042 . 1048) (t 25314 39012 369774 767000)) nil (25314 39120 985920 783000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face elixir-atom-face)) . -1042) (undo-tree-id85 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -1043) (undo-tree-id86 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -1044) (undo-tree-id87 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -1045) (undo-tree-id88 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -1046) (undo-tree-id89 . -1) (#("_" 0 1 (fontified t face elixir-atom-face)) . -1047) (undo-tree-id90 . -1) 1048) nil (25314 39120 985915 903000) 0 nil])
([nil nil ((1042 . 1059)) nil (25314 39120 985902 648000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face elixir-atom-face)) . -1054) (undo-tree-id80 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -1055) (undo-tree-id81 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -1056) (undo-tree-id82 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -1057) (undo-tree-id83 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -1058) (undo-tree-id84 . -1) 1059) nil (25314 39120 985898 791000) 0 nil])
([nil nil ((1054 . 1063)) nil (25314 39120 985887 570000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 970) (#("t" 0 1 (fontified t)) . 970) (#("a" 0 1 (fontified t)) . 970) (#("d" 0 1 (fontified t)) . 970) (#(":" 0 1 (fontified t face elixir-atom-face)) . 970)) nil (25314 39120 985884 414000) 0 nil])
([nil nil ((970 . 989)) nil (25314 39120 985880 857000) 0 nil])
([nil nil ((970 . 971)) nil (25314 39120 985879 154000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face elixir-atom-face)) . -1008) (undo-tree-id73 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -1009) (undo-tree-id74 . -1) (#("l" 0 1 (fontified t face elixir-atom-face)) . -1010) (undo-tree-id75 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -1011) (undo-tree-id76 . -1) (#("n" 0 1 (fontified t face elixir-atom-face)) . -1012) (undo-tree-id77 . -1) (#("c" 0 1 (fontified t face elixir-atom-face)) . -1013) (undo-tree-id78 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -1014) (undo-tree-id79 . -1) 1015) nil (25314 39120 985874 665000) 0 nil])
([nil nil ((1008 . 1013)) nil (25314 39120 985859 546000) 0 nil])
([nil nil ((1021 . 1023)) nil (25314 39120 985857 743000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1024) (#("0" 0 1 (fontified t)) . 1024) (#("." 0 1 (fontified t)) . 1024) (#("0" 0 1 (fontified t)) . 1024) (#(" " 0 1 (fontified t)) . 1024) (#("t" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("l" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("u" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("a" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("f" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("e" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("d" 0 1 (fontified t face elixir-atom-face)) . 1024) (#(" " 0 1 (fontified t)) . 1024) (#("," 0 1 (fontified t)) . 1024) (#("l" 0 1 (fontified t face elixir-atom-face)) . 1024) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("m" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("i" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("c" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("e" 0 1 (fontified t face elixir-atom-face)) . 1024) (#("d" 0 1 (fontified t face elixir-atom-face)) . 1024)) nil (25314 39120 985849 647000) 0 nil])
([nil nil ((1024 . 1030)) nil (25314 39120 985833 947000) 0 nil])
([nil nil ((1030 . 1036)) nil (25314 39120 985831 803000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -1035) (undo-tree-id70 . -1) 1036) nil (25314 39120 985829 609000) 0 nil])
([nil nil ((1035 . 1037)) nil (25314 39120 985822 606000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1033) (undo-tree-id69 . -1) 1034) nil (25314 39120 985820 402000) 0 nil])
([nil nil ((1036 . 1040)) nil (25314 39120 985816 444000) 0 nil])
([nil nil ((1073 . 1080)) nil (25314 39120 985814 460000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face elixir-atom-face)) . -1075) (undo-tree-id64 . -1) (#("i" 0 1 (fontified t face elixir-atom-face)) . -1076) (undo-tree-id65 . -1) (#("r" 0 1 (fontified t face elixir-atom-face)) . -1077) (undo-tree-id66 . -1) (#("n" 0 1 (fontified t face elixir-atom-face)) . -1078) (undo-tree-id67 . -1) (#("g" 0 1 (fontified t face elixir-atom-face)) . -1079) (undo-tree-id68 . -1) 1080) nil (25314 39120 985810 543000) 0 nil])
([nil nil ((1075 . 1076)) nil (25314 39120 985798 941000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face elixir-atom-face)) . -1075) (undo-tree-id63 . -1) 1076) nil (25314 39120 985796 506000) 0 nil])
([nil nil ((1075 . 1087)) nil (25314 39120 985792 8000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1086) (undo-tree-id62 . -1) 1087) nil (25314 39120 985787 739000) 0 nil])
([nil nil ((1086 . 1090)) nil (25314 39120 985767 862000) 0 nil])
([nil nil ((1174 . 1195) (t 25314 39120 997348 130000)) nil (25314 39261 162955 715000) 0 nil])
([nil nil ((1195 . 1196)) nil (25314 39261 162954 12000) 0 nil])
([nil nil ((1196 . 1207)) nil (25314 39261 162952 669000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1206) (undo-tree-id93 . -1) 1207) nil (25314 39261 162950 976000) 0 nil])
([nil nil ((1206 . 1211)) nil (25314 39261 162947 489000) 0 nil])
([nil nil ((1162 . 1173)) nil (25314 39261 162946 17000) 0 nil])
([nil nil ((1150 . 1157)) nil (25314 39261 162944 403000) 0 nil])
([nil nil ((1157 . 1163)) nil (25314 39261 162942 881000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face elixir-atom-face)) . -1162) (undo-tree-id92 . -1) 1163) nil (25314 39261 162940 837000) 0 nil])
([nil nil ((1162 . 1165)) nil (25314 39261 162934 415000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face elixir-atom-face)) . -1164) (undo-tree-id91 . -1) 1165) nil (25314 39261 162931 78000) 0 nil])
([nil nil ((1164 . 1166)) nil (25314 39261 162917 683000) 0 nil])
([nil nil ((1166 . 1169)) nil (25314 39261 162915 889000) 0 nil])
([nil nil ((1169 . 1185)) nil (25314 39261 162914 56000) 0 nil])
([nil nil ((1185 . 1193)) nil (25314 39261 162911 521000) 0 nil])
([nil nil ((1216 . 1230)) nil (25314 39261 162905 520000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face elixir-atom-face)) . -1229) (undo-tree-id106 . -1) 1230 (t 25314 39261 200584 613000)) nil (25315 9846 590855 463000) 0 nil])
([nil nil ((1229 . 1233)) nil (25315 9846 590853 969000) 0 nil])
([nil nil ((1102 . 1108)) nil (25315 9846 590853 388000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face elixir-atom-face)) . -1107) (undo-tree-id105 . -1) 1108) nil (25315 9846 590852 455000) 0 nil])
([nil nil ((1107 . 1115)) nil (25315 9846 590851 102000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face elixir-atom-face)) . -1112) (undo-tree-id102 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -1113) (undo-tree-id103 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -1114) (undo-tree-id104 . -1) 1115) nil (25315 9846 590849 989000) 0 nil])
([nil nil ((1112 . 1115)) nil (25315 9846 590734 496000) 0 nil])
([nil nil ((1115 . 1120)) nil (25315 9846 590733 794000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face elixir-atom-face)) . -1119) (undo-tree-id101 . -1) 1120) nil (25315 9846 590733 22000) 0 nil])
([nil nil ((1119 . 1138)) nil (25315 9846 590731 699000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1130) (undo-tree-id100 . -1) 1131) nil (25315 9846 590730 796000) 0 nil])
([nil nil ((1137 . 1145)) nil (25315 9846 590729 142000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face elixir-atom-face)) . -1288) (undo-tree-id94 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -1289) (undo-tree-id95 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -1290) (undo-tree-id96 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -1291) (undo-tree-id97 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -1292) (undo-tree-id98 . -1) (#("r" 0 1 (fontified t face elixir-atom-face)) . -1293) (undo-tree-id99 . -1) 1294) nil (25315 9846 590726 776000) 0 nil])
([nil nil ((1288 . 1292)) nil (25315 9846 590707 918000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face elixir-atom-face)) . -683) (undo-tree-id137 . -1) 684 (t 25315 9846 601741 998000)) nil (25315 11900 573670 511000) 0 nil])
([nil nil ((683 . 684)) nil (25315 11900 573666 53000) 0 nil])
([nil nil ((1169 . 1186)) nil (25315 11900 573663 678000) 0 nil])
([nil nil ((1186 . 1195)) nil (25315 11900 573661 775000) 0 nil])
([nil nil ((1157 . 1178)) nil (25315 11900 573659 631000) 0 nil])
([nil nil ((1178 . 1179)) nil (25315 11900 573657 677000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face elixir-atom-face)) . -1168) (undo-tree-id130 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -1169) (undo-tree-id131 . -1) (#("l" 0 1 (fontified t face elixir-atom-face)) . -1170) (undo-tree-id132 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -1171) (undo-tree-id133 . -1) (#("n" 0 1 (fontified t face elixir-atom-face)) . -1172) (undo-tree-id134 . -1) (#("c" 0 1 (fontified t face elixir-atom-face)) . -1173) (undo-tree-id135 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -1174) (undo-tree-id136 . -1) 1175) nil (25315 11900 573653 28000) 0 nil])
([nil nil ((1168 . 1173)) nil (25315 11900 573635 84000) 0 nil])
([nil nil ((1176 . 1177)) nil (25315 11900 573633 130000) 0 nil])
([nil nil ((1177 . 1178)) nil (25315 11900 573631 26000) 0 nil])
([nil nil ((1229 . 1230)) nil (25315 11900 573629 193000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face elixir-atom-face)) . -1229) (undo-tree-id129 . -1) 1230) nil (25315 11900 573627 19000) 0 nil])
([nil nil ((1229 . 1240)) nil (25315 11900 573623 282000) 0 nil])
([nil nil ((1240 . 1254)) nil (25315 11900 573621 559000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face elixir-atom-face)) . -1251) (undo-tree-id126 . -1) (#("n" 0 1 (fontified t face elixir-atom-face)) . -1252) (undo-tree-id127 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -1253) (undo-tree-id128 . -1) 1254) nil (25315 11900 573618 443000) 0 nil])
([nil nil ((1251 . 1257)) nil (25315 11900 573610 728000) 0 nil])
([nil nil ((1257 . 1265)) nil (25315 11900 573609 5000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -1264) (undo-tree-id125 . -1) 1265) nil (25315 11900 573605 749000) 0 nil])
([nil nil ((1264 . 1265)) nil (25315 11900 573601 992000) 0 nil])
([nil nil ((1179 . 1192)) nil (25315 11900 573600 208000) 0 nil])
([nil nil ((1276 . 1277)) nil (25315 11900 573598 525000) 0 nil])
([nil nil ((1192 . 1195)) nil (25315 11900 573596 822000) 0 nil])
([nil nil ((1121 . 1127) (1065 . 1071) (1006 . 1012) (962 . 968) (918 . 924) (874 . 880) (815 . 821) (757 . 763) (701 . 707) 1073) nil (25315 11900 573594 6000) 0 nil])
([nil nil ((1462 . 1463)) nil (25315 11900 573588 496000) 0 nil])
([nil nil ((1463 . 1464)) nil (25315 11900 573586 332000) 0 nil])
([nil nil ((1493 . 1499) (1447 . 1453) (1386 . 1392) (1331 . 1337) (1287 . 1293) (1231 . 1237) 1463) nil (25315 11900 573583 897000) 0 nil])
([nil nil ((578 . 579)) nil (25315 11900 573579 579000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -578) (undo-tree-id124 . -1) 579) nil (25315 11900 573577 445000) 0 nil])
([nil nil ((#(":date, :balance, :delay_days, :user_id, :amount_due, :extract_date, :contract_id, :customer_id" 0 5 (fontified t face elixir-atom-face) 5 7 (fontified t) 7 15 (fontified t face elixir-atom-face) 15 17 (fontified t) 17 28 (fontified t face elixir-atom-face) 28 30 (fontified t) 30 38 (fontified t face elixir-atom-face) 38 40 (fontified t) 40 50 (fontified t face elixir-atom-face) 50 51 (fontified t face elixir-atom-face) 51 53 (fontified t) 53 66 (fontified t face elixir-atom-face) 66 68 (fontified t) 68 80 (fontified t face elixir-atom-face) 80 82 (fontified t) 82 94 (fontified t face elixir-atom-face)) . 483) (undo-tree-id122 . -94) (undo-tree-id123 . -94)) nil (25315 11900 573573 187000) 0 nil])
([nil nil ((#(":amount_debit, :reference, :charges, :is_paid" 0 13 (fontified t face elixir-atom-face) 13 15 (fontified t) 15 25 (fontified t face elixir-atom-face) 25 27 (fontified t) 27 35 (fontified t face elixir-atom-face) 35 37 (fontified t) 37 45 (fontified t face elixir-atom-face)) . -505) (undo-tree-id120 . -45) (undo-tree-id121 . -45) 550) nil (25315 11900 573567 416000) 0 nil])
([nil nil ((505 . 523)) nil (25315 11900 573561 936000) 0 nil])
([nil nil ((523 . 531)) nil (25315 11900 573560 303000) 0 nil])
([nil nil ((515 . 516)) nil (25315 11900 573558 559000) 0 nil])
([nil nil ((532 . 533)) nil (25315 11900 573556 906000) 0 nil])
([nil nil ((533 . 550)) nil (25315 11900 573554 752000) 0 nil])
([nil nil ((533 . 534)) nil (25315 11900 573553 109000) 0 nil])
([nil nil ((551 . 564)) nil (25315 11900 573551 446000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -554) (undo-tree-id119 . -1) 555) nil (25315 11900 573549 141000) 0 nil])
([nil nil ((551 . 553)) nil (25315 11900 573545 224000) 0 nil])
([nil nil ((533 . 534)) nil (25315 11900 573543 431000) 0 nil])
([nil nil ((515 . 516)) nil (25315 11900 573541 577000) 0 nil])
([nil nil ((483 . 493)) nil (25315 11900 573539 834000) 0 nil])
([nil nil ((493 . 494)) nil (25315 11900 573538 191000) 0 nil])
([nil nil ((494 . 515)) nil (25315 11900 573536 137000) 0 nil])
([nil nil ((515 . 518)) nil (25315 11900 573534 464000) 0 nil])
([nil nil ((509 . 510)) nil (25315 11900 573532 740000) 0 nil])
([nil nil ((519 . 522)) nil (25315 11900 573531 117000) 0 nil])
([nil nil ((520 . 521)) nil (25315 11900 573529 414000) 0 nil])
([nil nil ((522 . 532)) nil (25315 11900 573527 631000) 0 nil])
([nil nil ((532 . 534)) nil (25315 11900 573525 747000) 0 nil])
([nil nil ((#("    
" 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t) 4 5 (fontified t)) . 1492) (undo-tree-id118 . -5)) nil (25315 11900 573523 32000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1492) (undo-tree-id117 . -1)) nil (25315 11900 573517 962000) 0 nil])
([nil nil ((#("def hello do
    :world
  end" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 9 (fontified t face font-lock-function-name-face) 9 10 (fontified t) 10 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 17 (fontified t) 17 23 (fontified t face elixir-atom-face) 23 24 (fontified t) 24 26 (fontified t) 26 29 (fontified t face font-lock-keyword-face)) . -1506) (undo-tree-id107 . -13) (undo-tree-id108 . -13) (undo-tree-id109 . -24) (undo-tree-id110 . -24) (undo-tree-id111 . -29) (undo-tree-id112 . -24) (undo-tree-id113 . -29) (undo-tree-id114 . 3) (undo-tree-id115 . -29) (undo-tree-id116 . -24) 1535) nil (25315 11900 573507 893000) 0 nil])
([nil nil ((533 . 535) (t 25315 11900 615011 610000)) nil (25315 57682 521548 85000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -532) (undo-tree-id141 . -1) (#("u" 0 1 (fontified t)) . -533) (undo-tree-id142 . -1) (#("o" 0 1 (fontified t)) . -534) (undo-tree-id143 . -1) 535) nil (25315 57682 521546 22000) 0 nil])
([nil nil ((532 . 544)) nil (25315 57682 521541 613000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -543) (undo-tree-id140 . -1) 544) nil (25315 57682 521540 391000) 0 nil])
([nil nil ((543 . 554)) nil (25315 57682 521538 127000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -541) (undo-tree-id139 . -1) 542) nil (25315 57682 521536 3000) 0 nil])
([nil nil ((541 . 542)) nil (25315 57682 521533 468000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -535) (undo-tree-id138 . -1) 536) nil (25315 57682 521531 174000) 0 nil])
([nil nil ((553 . 555)) nil (25315 57682 521499 375000) 0 nil])
([nil nil ((686 . 687) (t 25315 57682 522917 634000)) nil (25316 1709 851141 667000) 0 nil])
([nil nil ((745 . 746)) nil (25316 1709 851140 835000) 0 nil])
([nil nil ((802 . 803)) nil (25316 1709 851140 54000) 0 nil])
([nil nil ((863 . 864)) nil (25316 1709 851139 322000) 0 nil])
([nil nil ((906 . 907)) nil (25316 1709 851138 280000) 0 nil])
([nil nil ((955 . 956)) nil (25316 1709 851137 519000) 0 nil])
([nil nil ((1006 . 1007)) nil (25316 1709 851136 717000) 0 nil])
([nil nil ((1059 . 1060)) nil (25316 1709 851136 56000) 0 nil])
([nil nil ((1121 . 1122)) nil (25316 1709 851135 245000) 0 nil])
([nil nil ((1188 . 1189)) nil (25316 1709 851134 513000) 0 nil])
([nil nil ((1234 . 1235)) nil (25316 1709 851133 872000) 0 nil])
([nil nil ((1292 . 1293)) nil (25316 1709 851133 241000) 0 nil])
([nil nil ((1339 . 1340)) nil (25316 1709 851132 520000) 0 nil])
([nil nil ((1392 . 1393)) nil (25316 1709 851131 628000) 0 nil])
([nil nil ((1449 . 1450)) nil (25316 1709 851130 346000) 0 nil])
([nil nil ((1496 . 1497)) nil (25316 1709 851126 548000) 0 nil])
([nil nil ((554 . 567) (t 25316 1709 862948 429000)) nil (25316 2932 67985 405000) 0 nil])
([nil nil ((792 . 793) (t 25316 2932 67930 392000)) nil (25316 2954 336071 565000) 0 nil])
([nil nil ((852 . 853)) nil (25316 2954 336069 41000) 0 nil])
([nil nil ((1048 . 1049)) nil (25316 2954 336066 195000) 0 nil])
([nil nil ((1437 . 1438)) nil (25316 2954 336058 321000) 0 nil])
([nil nil ((1220 . 1221) (t 25316 2954 351950 316000)) nil (25316 3048 54860 607000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 461) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1)) nil (25316 3048 54856 359000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 655) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1)) nil (25316 3048 54841 932000) 0 nil])
([nil nil ((566 . 585) (t 25316 3048 68029 862000)) nil (25316 4149 171821 194000) 0 nil])
([nil nil ((585 . 606)) nil (25316 4149 171820 362000) 0 nil])
([nil nil ((606 . 609)) nil (25316 4149 171819 270000) 0 nil])
([nil nil ((609 . 617)) nil (25316 4149 171818 499000) 0 nil])
([nil nil ((617 . 635)) nil (25316 4149 171817 767000) 0 nil])
([nil nil ((635 . 647)) nil (25316 4149 171816 715000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 647) (#(" " 0 1 (fontified t)) . 647) (#(" " 0 1 (fontified t)) . 647)) nil (25316 4149 171812 66000) 0 nil])
([nil nil ((798 . 1491) (#("
    field :loan_code,                  :string, size: 19
    field :plan_number,                :integer, default: 0
    field :quota_sec,                  :integer, default: 0 
    field :start_date,                 :date
    field :due_date,                   :date
    field :payment_date,               :date
    field :quota_delayed_days,         :integer, default: 0 
    field :quota_state,                :string, size: 10
    field :balance_sub_code,           :string, size: 15
    field :delayed_quota_history_days, :integer, size: 2
    field :last_quota_state,           :string, size: 10
    field :last_payment_date,          :date
    field :last_state_sub_code,        :string, size: 7
    field :prevision_amount,           :decimal, default: 0.00
    field :INTE_adjust,                :binary
    field :bill_number,                :string, size: 1
  end   
  
  
" 0 1 (fontified t) 1 5 (fontified t) 5 11 (fontified t) 11 21 (fontified t face elixir-atom-face) 21 22 (fontified t) 22 26 (fontified t) 26 34 (fontified t) 34 40 (fontified t) 40 41 (fontified t face elixir-atom-face) 41 47 (fontified t face elixir-atom-face) 47 49 (fontified t) 49 54 (fontified t face elixir-atom-face) 54 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 68 (fontified t) 68 80 (fontified t face elixir-atom-face) 80 81 (fontified t) 81 83 (fontified t) 83 91 (fontified t) 91 97 (fontified t) 97 105 (fontified t face elixir-atom-face) 105 107 (fontified t) 107 115 (fontified t face elixir-atom-face) 115 117 (fontified t) 117 118 (fontified t) 118 122 (fontified t) 122 128 (fontified t) 128 138 (fontified t face elixir-atom-face) 138 139 (fontified t) 139 143 (fontified t) 143 151 (fontified t) 151 157 (fontified t) 157 165 (fontified t face elixir-atom-face) 165 167 (fontified t) 167 175 (fontified t face elixir-atom-face) 175 177 (fontified t) 177 178 (fontified t) 178 179 (fontified t) 179 183 (fontified t) 183 189 (fontified t) 189 200 (fontified t face elixir-atom-face) 200 201 (fontified t) 201 204 (fontified t) 204 212 (fontified t) 212 218 (fontified t) 218 223 (fontified t face elixir-atom-face) 223 224 (fontified t) 224 227 (fontified t) 227 228 (rear-nonsticky t fontified t) 228 234 (fontified t) 234 243 (fontified t face elixir-atom-face) 243 244 (fontified t) 244 249 (fontified t) 249 257 (fontified t) 257 263 (fontified t) 263 268 (fontified t face elixir-atom-face) 268 269 (fontified t) 269 272 (fontified t) 272 273 (rear-nonsticky t fontified t) 273 279 (fontified t) 279 285 (fontified t face elixir-atom-face) 285 292 (fontified t face elixir-atom-face) 292 293 (fontified t) 293 294 (fontified t) 294 302 (fontified t) 302 308 (fontified t) 308 313 (fontified t face elixir-atom-face) 313 314 (fontified t) 314 317 (fontified t) 317 318 (rear-nonsticky t fontified t) 318 324 (fontified t) 324 343 (fontified t face elixir-atom-face) 343 344 (fontified t) 344 347 (fontified t) 347 353 (fontified t) 353 354 (fontified t face elixir-atom-face) 354 361 (fontified t face elixir-atom-face) 361 363 (fontified t) 363 371 (fontified t face elixir-atom-face) 371 374 (fontified t) 374 375 (fontified t) 375 378 (fontified t) 378 379 (rear-nonsticky t fontified t) 379 385 (fontified t) 385 395 (fontified t face elixir-atom-face) 395 397 (face elixir-atom-face fontified t) 397 398 (fontified t) 398 405 (fontified t) 405 408 (fontified t) 408 414 (fontified t) 414 421 (face elixir-atom-face fontified t) 421 422 (fontified t) 422 423 (fontified t) 423 428 (face elixir-atom-face fontified t) 428 431 (fontified t) 431 432 (fontified t) 432 435 (fontified t) 435 436 (rear-nonsticky t fontified t) 436 442 (fontified t) 442 459 (fontified t face elixir-atom-face) 459 460 (fontified t) 460 465 (fontified t) 465 471 (fontified t) 471 478 (fontified t face elixir-atom-face) 478 480 (fontified t) 480 485 (fontified t face elixir-atom-face) 485 488 (fontified t) 488 489 (fontified t) 489 490 (fontified t) 490 492 (fontified t) 492 493 (rear-nonsticky t fontified t) 493 499 (fontified t) 499 526 (fontified t face elixir-atom-face) 526 527 (fontified t) 527 528 (fontified t) 528 529 (fontified t face elixir-atom-face) 529 536 (fontified t face elixir-atom-face) 536 538 (fontified t) 538 543 (fontified t face elixir-atom-face) 543 545 (fontified t) 545 546 (fontified t) 546 549 (fontified t) 549 550 (rear-nonsticky t fontified t) 550 556 (fontified t) 556 573 (fontified t face elixir-atom-face) 573 574 (fontified t) 574 578 (fontified t) 578 584 (fontified t) 584 585 (fontified t) 585 592 (fontified t face elixir-atom-face) 592 594 (fontified t) 594 599 (fontified t face elixir-atom-face) 599 602 (fontified t) 602 603 (fontified t) 603 606 (fontified t) 606 607 (rear-nonsticky t fontified t) 607 613 (fontified t) 613 621 (fontified t face elixir-atom-face) 621 631 (fontified t face elixir-atom-face) 631 632 (fontified t) 632 635 (fontified t) 635 641 (fontified t) 641 642 (fontified t) 642 647 (fontified t face elixir-atom-face) 647 648 (fontified t) 648 651 (fontified t) 651 652 (rear-nonsticky t fontified t) 652 658 (fontified t) 658 678 (fontified t face elixir-atom-face) 678 679 (fontified t) 679 680 (fontified t) 680 681 (fontified t) 681 686 (fontified t) 686 687 (fontified t) 687 691 (fontified t face elixir-atom-face) 691 694 (fontified t face elixir-atom-face) 694 696 (fontified t) 696 701 (fontified t face elixir-atom-face) 701 703 (fontified t) 703 704 (fontified t) 704 707 (fontified t) 707 708 (rear-nonsticky t fontified t) 708 714 (fontified t) 714 731 (fontified t face elixir-atom-face) 731 732 (fontified t) 732 736 (fontified t) 736 742 (fontified t) 742 743 (fontified t) 743 748 (fontified t face elixir-atom-face) 748 751 (fontified t face elixir-atom-face) 751 753 (fontified t) 753 761 (fontified t face elixir-atom-face) 761 766 (fontified t) 766 767 (fontified t) 767 770 (fontified t) 770 771 (rear-nonsticky t fontified t) 771 777 (fontified t) 777 789 (fontified t face elixir-atom-face) 789 790 (fontified t) 790 799 (fontified t) 799 805 (fontified t) 805 806 (fontified t) 806 813 (fontified t face elixir-atom-face) 813 814 (fontified t) 814 817 (fontified t) 817 818 (rear-nonsticky t fontified t) 818 824 (fontified t) 824 836 (fontified t face elixir-atom-face) 836 837 (fontified t) 837 846 (fontified t) 846 852 (fontified t) 852 853 (fontified t) 853 860 (fontified t face elixir-atom-face) 860 862 (fontified t) 862 867 (fontified t face elixir-atom-face) 867 869 (fontified t) 869 870 (fontified t) 870 872 (fontified t) 872 875 (fontified t face font-lock-keyword-face) 875 876 (fontified t) 876 877 (fontified t) 877 878 (fontified t) 878 879 (fontified t) 879 881 (fontified t) 881 882 (fontified t) 882 884 (fontified t) 884 885 (rear-nonsticky t fontified t)) . -798) (undo-tree-id152 . -58) (undo-tree-id153 . -884) (undo-tree-id154 . -118) (undo-tree-id155 . -318) (undo-tree-id156 . -379) (undo-tree-id157 . -436) (undo-tree-id158 . -493) (undo-tree-id159 . -550) (undo-tree-id160 . -607) (undo-tree-id161 . -652) (undo-tree-id162 . -708) (undo-tree-id163 . -771) (undo-tree-id164 . -818) (undo-tree-id165 . -26) (undo-tree-id166 . -34) (undo-tree-id167 . -578) (undo-tree-id168 . -58) (undo-tree-id169 . -58) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -118) (undo-tree-id173 . -118) (undo-tree-id174 . -179) (undo-tree-id175 . -179) (undo-tree-id176 . -224) (undo-tree-id177 . -224) (undo-tree-id178 . -269) (undo-tree-id179 . -269) (undo-tree-id180 . -314) (undo-tree-id181 . -314) (undo-tree-id182 . -375) (undo-tree-id183 . -375) (undo-tree-id184 . -432) (undo-tree-id185 . -432) (undo-tree-id186 . -489) (undo-tree-id187 . -489) (undo-tree-id188 . -546) (undo-tree-id189 . -546) (undo-tree-id190 . -603) (undo-tree-id191 . -603) (undo-tree-id192 . -648) (undo-tree-id193 . -648) (462 . 693) (#("  @required_fields [:loan_code, :plan_number, :quota_sec, :start_date, :quota_delayed_days, :quota_state, :balance_sub_code, :delayed_quota_history_days, :prevision_amount, :INTE_adjust]
" 0 2 (fontified t) 2 18 (fontified t face elixir-attribute-face) 18 20 (fontified t) 20 30 (fontified t face elixir-atom-face) 30 32 (fontified t) 32 44 (fontified t face elixir-atom-face) 44 46 (fontified t) 46 56 (fontified t face elixir-atom-face) 56 58 (fontified t) 58 69 (fontified t face elixir-atom-face) 69 71 (fontified t) 71 90 (fontified t face elixir-atom-face) 90 92 (fontified t) 92 104 (fontified t face elixir-atom-face) 104 106 (fontified t) 106 123 (fontified t face elixir-atom-face) 123 125 (fontified t) 125 152 (fontified t face elixir-atom-face) 152 154 (fontified t) 154 171 (fontified t face elixir-atom-face) 171 173 (fontified t) 173 185 (fontified t face elixir-atom-face) 185 187 (fontified t)) . -462) (undo-tree-id194 . -2) (undo-tree-id195 . -20) (undo-tree-id196 . -20) (undo-tree-id197 . -187) (undo-tree-id198 . -187) (undo-tree-id199 . -187) (undo-tree-id200 . -185) (undo-tree-id201 . -185) (undo-tree-id202 . -185) (undo-tree-id203 . -185) (undo-tree-id204 . -185) (t 25316 4149 169627 174000)) nil (25316 4158 962256 839000) 0 nil])
([nil nil ((801 . 802) (t 25316 4158 965702 934000)) nil (25316 4231 877576 279000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -801) (undo-tree-id237 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -802) (undo-tree-id238 . -1) 803 (t 25316 4231 882231 616000)) nil (25316 4285 668916 617000) 0 nil])
([nil nil ((801 . 802)) nil (25316 4285 668910 135000) 0 nil])
([nil nil ((807 . 808)) nil (25316 4285 668908 472000) 0 nil])
([nil nil ((849 . 850)) nil (25316 4285 668906 819000) 0 nil])
([nil nil ((896 . 897)) nil (25316 4285 668905 146000) 0 nil])
([nil nil ((941 . 942)) nil (25316 4285 668903 412000) 0 nil])
([nil nil ((972 . 973)) nil (25316 4285 668901 709000) 0 nil])
([nil nil ((1001 . 1002)) nil (25316 4285 668899 926000) 0 nil])
([nil nil ((1034 . 1035)) nil (25316 4285 668898 253000) 0 nil])
([nil nil ((1088 . 1089)) nil (25316 4285 668896 499000) 0 nil])
([nil nil ((1132 . 1133)) nil (25316 4285 668894 836000) 0 nil])
([nil nil ((1181 . 1182)) nil (25316 4285 668893 63000) 0 nil])
([nil nil ((1240 . 1241)) nil (25316 4285 668891 420000) 0 nil])
([nil nil ((1289 . 1290)) nil (25316 4285 668889 707000) 0 nil])
([nil nil ((1327 . 1328)) nil (25316 4285 668888 3000) 0 nil])
([nil nil ((1378 . 1379)) nil (25316 4285 668886 210000) 0 nil])
([nil nil ((1433 . 1434)) nil (25316 4285 668884 467000) 0 nil])
([nil nil ((1467 . 1468)) nil (25316 4285 668882 653000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 808) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . 1) (undo-tree-id236 . -1)) nil (25316 4285 668880 329000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 849) (undo-tree-id231 . 1) (undo-tree-id232 . -1)) nil (25316 4285 668871 683000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 895)) nil (25316 4285 668866 723000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 939) (undo-tree-id229 . 1) (undo-tree-id230 . -1)) nil (25316 4285 668864 569000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 969) (undo-tree-id227 . 1) (undo-tree-id228 . -1)) nil (25316 4285 668857 646000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 997) (undo-tree-id225 . 1) (undo-tree-id226 . -1)) nil (25316 4285 668852 326000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1029) (undo-tree-id223 . 1) (undo-tree-id224 . -1)) nil (25316 4285 668846 856000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1082) (undo-tree-id221 . 1) (undo-tree-id222 . -1)) nil (25316 4285 668841 616000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1125) (undo-tree-id219 . 1) (undo-tree-id220 . -1)) nil (25316 4285 668836 486000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1173) (undo-tree-id217 . 1) (undo-tree-id218 . -1)) nil (25316 4285 668831 136000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1231) (undo-tree-id215 . 1) (undo-tree-id216 . -1)) nil (25316 4285 668825 917000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1279) (undo-tree-id213 . 1) (undo-tree-id214 . -1)) nil (25316 4285 668820 597000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1316) (undo-tree-id211 . 1) (undo-tree-id212 . -1)) nil (25316 4285 668815 116000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1366) (undo-tree-id209 . 1) (undo-tree-id210 . -1)) nil (25316 4285 668809 916000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1420) (undo-tree-id207 . 1) (undo-tree-id208 . -1)) nil (25316 4285 668804 256000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1453) (undo-tree-id205 . 1) (undo-tree-id206 . -1)) nil (25316 4285 668795 329000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1483)) nil (25316 4285 668777 746000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1441)) nil (25316 4285 668775 742000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1408)) nil (25316 4285 668773 698000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1354)) nil (25316 4285 668771 805000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1304)) nil (25316 4285 668769 991000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1267)) nil (25316 4285 668768 148000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1219)) nil (25316 4285 668766 244000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1161)) nil (25316 4285 668764 331000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1113)) nil (25316 4285 668762 507000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1070)) nil (25316 4285 668760 323000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1017)) nil (25316 4285 668758 500000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 985)) nil (25316 4285 668756 626000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 957)) nil (25316 4285 668754 733000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 927)) nil (25316 4285 668752 528000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 883)) nil (25316 4285 668749 122000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 837)) nil (25316 4285 668740 987000) 0 nil])
([nil nil ((798 . 1485) (#("    field :loan_code, :string, size: 19
    field :plan_number, :integer, default: 0
    field :quota_sec, :integer, default: 0
    field :start_date, :date
    field :due_date, :date
    field :payment_date, :date
    field :quota_delayed_days, :integer, default: 0
    field :quota_state, :string, size: 10
    field :balance_sub_code, :string, size: 15
    field :delayed_quota_history_days, :integer, size: 2
    field :last_quota_state, :string, size: 10
    field :last_payment_date, :date
    field :last_state_sub_code, :string, size: 7
    field :prevision_amount, :decimal, default: 0.00
    field :INTE_adjust, :binary
    field :bill_number, :string, size: 1
" 0 4 (fontified t) 4 10 (fontified t) 10 20 (fontified t face elixir-atom-face) 20 22 (fontified t) 22 29 (fontified t face elixir-atom-face) 29 31 (fontified t) 31 36 (fontified t face elixir-atom-face) 36 40 (fontified t) 40 50 (fontified t) 50 62 (fontified t face elixir-atom-face) 62 64 (fontified t) 64 72 (fontified t face elixir-atom-face) 72 74 (fontified t) 74 82 (fontified t face elixir-atom-face) 82 85 (fontified t) 85 95 (fontified t) 95 105 (fontified t face elixir-atom-face) 105 107 (fontified t) 107 115 (fontified t face elixir-atom-face) 115 117 (fontified t) 117 125 (fontified t face elixir-atom-face) 125 128 (fontified t) 128 138 (fontified t) 138 149 (fontified t face elixir-atom-face) 149 151 (fontified t) 151 156 (fontified t face elixir-atom-face) 156 157 (fontified t) 157 160 (fontified t) 160 167 (fontified t) 167 176 (fontified t face elixir-atom-face) 176 178 (fontified t) 178 183 (fontified t face elixir-atom-face) 183 184 (fontified t) 184 194 (fontified t) 194 207 (fontified t face elixir-atom-face) 207 209 (fontified t) 209 214 (fontified t face elixir-atom-face) 214 215 (fontified t) 215 225 (fontified t) 225 244 (fontified t face elixir-atom-face) 244 246 (fontified t) 246 254 (fontified t face elixir-atom-face) 254 256 (fontified t) 256 264 (fontified t face elixir-atom-face) 264 267 (fontified t) 267 277 (fontified t) 277 289 (fontified t face elixir-atom-face) 289 291 (fontified t) 291 298 (fontified t face elixir-atom-face) 298 300 (fontified t) 300 305 (fontified t face elixir-atom-face) 305 309 (fontified t) 309 319 (fontified t) 319 336 (fontified t face elixir-atom-face) 336 338 (fontified t) 338 345 (fontified t face elixir-atom-face) 345 347 (fontified t) 347 352 (fontified t face elixir-atom-face) 352 356 (fontified t) 356 366 (fontified t) 366 393 (fontified t face elixir-atom-face) 393 395 (fontified t) 395 403 (fontified t face elixir-atom-face) 403 405 (fontified t) 405 410 (fontified t face elixir-atom-face) 410 413 (fontified t) 413 423 (fontified t) 423 440 (fontified t face elixir-atom-face) 440 442 (fontified t) 442 449 (fontified t face elixir-atom-face) 449 451 (fontified t) 451 456 (fontified t face elixir-atom-face) 456 460 (fontified t) 460 468 (fontified t) 468 470 (fontified t) 470 488 (fontified t face elixir-atom-face) 488 490 (fontified t) 490 495 (fontified t face elixir-atom-face) 495 496 (fontified t) 496 506 (fontified t) 506 526 (fontified t face elixir-atom-face) 526 528 (fontified t) 528 529 (fontified t face elixir-atom-face) 529 535 (fontified t face elixir-atom-face) 535 537 (fontified t) 537 540 (fontified t face elixir-atom-face) 540 542 (face elixir-atom-face fontified t) 542 545 (fontified t) 545 555 (fontified t) 555 572 (fontified t face elixir-atom-face) 572 574 (fontified t) 574 582 (fontified t face elixir-atom-face) 582 584 (fontified t) 584 592 (fontified t face elixir-atom-face) 592 598 (fontified t) 598 608 (fontified t) 608 620 (fontified t face elixir-atom-face) 620 622 (fontified t) 622 629 (fontified t face elixir-atom-face) 629 630 (fontified t) 630 640 (fontified t) 640 652 (fontified t face elixir-atom-face) 652 654 (fontified t) 654 661 (fontified t face elixir-atom-face) 661 663 (fontified t) 663 668 (fontified t face elixir-atom-face) 668 671 (fontified t)) . -798) (undo-tree-id288 . -671) (undo-tree-id289 . -671) (undo-tree-id290 . -630) (undo-tree-id291 . -630) (undo-tree-id292 . -40) (undo-tree-id293 . -40) (undo-tree-id294 . -85) (undo-tree-id295 . -85) (undo-tree-id296 . -184) (undo-tree-id297 . -184) (undo-tree-id298 . -215) (undo-tree-id299 . -215) (undo-tree-id300 . -267) (undo-tree-id301 . -267) (undo-tree-id302 . -309) (undo-tree-id303 . -309) (undo-tree-id304 . -356) (undo-tree-id305 . -356) (undo-tree-id306 . -413) (undo-tree-id307 . -413) (undo-tree-id308 . -460) (undo-tree-id309 . -460) (undo-tree-id310 . -496) (undo-tree-id311 . -496) (undo-tree-id312 . -545) (undo-tree-id313 . -545) (undo-tree-id314 . -598) (undo-tree-id315 . -598) (undo-tree-id316 . -157) (undo-tree-id317 . -157) (undo-tree-id318 . -128) (undo-tree-id319 . -128) (t 25316 4285 682585 266000)) nil (25316 6081 9803 420000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -827) (undo-tree-id278 . -1) (#(" " 0 1 (fontified t)) . -828) (undo-tree-id279 . -1) (#("s" 0 1 (fontified t)) . -829) (undo-tree-id280 . -1) (#("i" 0 1 (fontified t)) . -830) (undo-tree-id281 . -1) (#("z" 0 1 (fontified t)) . -831) (undo-tree-id282 . -1) (#("e" 0 1 (fontified t)) . -832) (undo-tree-id283 . -1) (#(":" 0 1 (fontified t)) . -833) (undo-tree-id284 . -1) (#(" " 0 1 (fontified t)) . -834) (undo-tree-id285 . -1) (#("1" 0 1 (fontified t)) . -835) (undo-tree-id286 . -1) (#("9" 0 1 (fontified t)) . -836) (undo-tree-id287 . -1) 837) nil (25316 6081 9749 418000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1093) (undo-tree-id268 . -1) (#(" " 0 1 (fontified t)) . -1094) (undo-tree-id269 . -1) (#("s" 0 1 (fontified t)) . -1095) (undo-tree-id270 . -1) (#("i" 0 1 (fontified t)) . -1096) (undo-tree-id271 . -1) (#("z" 0 1 (fontified t)) . -1097) (undo-tree-id272 . -1) (#("e" 0 1 (fontified t)) . -1098) (undo-tree-id273 . -1) (#(":" 0 1 (fontified t)) . -1099) (undo-tree-id274 . -1) (#(" " 0 1 (fontified t)) . -1100) (undo-tree-id275 . -1) (#("1" 0 1 (fontified t)) . -1101) (undo-tree-id276 . -1) (#("0" 0 1 (fontified t)) . -1102) (undo-tree-id277 . -1) 1103) nil (25316 6081 9725 473000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1132) (undo-tree-id259 . -1) (#("s" 0 1 (fontified t)) . -1133) (undo-tree-id260 . -1) (#("i" 0 1 (fontified t)) . -1134) (undo-tree-id261 . -1) (#("z" 0 1 (fontified t)) . -1135) (undo-tree-id262 . -1) (#("e" 0 1 (fontified t)) . -1136) (undo-tree-id263 . -1) (#(":" 0 1 (fontified t)) . -1137) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t)) . -1138) (undo-tree-id265 . -1) (#("1" 0 1 (fontified t)) . -1139) (undo-tree-id266 . -1) (#("5" 0 1 (fontified t)) . -1140) (undo-tree-id267 . -1) 1141) nil (25316 6081 9701 47000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1131) (undo-tree-id258 . -1) 1132) nil (25316 6081 9681 421000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1227) (undo-tree-id248 . -1) (#(" " 0 1 (fontified t)) . -1228) (undo-tree-id249 . -1) (#("s" 0 1 (fontified t)) . -1229) (undo-tree-id250 . -1) (#("i" 0 1 (fontified t)) . -1230) (undo-tree-id251 . -1) (#("z" 0 1 (fontified t)) . -1231) (undo-tree-id252 . -1) (#("e" 0 1 (fontified t)) . -1232) (undo-tree-id253 . -1) (#(":" 0 1 (fontified t)) . -1233) (undo-tree-id254 . -1) (#(" " 0 1 (fontified t)) . -1234) (undo-tree-id255 . -1) (#("1" 0 1 (fontified t)) . -1235) (undo-tree-id256 . -1) (#("0" 0 1 (fontified t)) . -1236) (undo-tree-id257 . -1) 1237) nil (25316 6081 9672 324000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1305) (undo-tree-id239 . -1) (#(" " 0 1 (fontified t)) . -1306) (undo-tree-id240 . -1) (#("s" 0 1 (fontified t)) . -1307) (undo-tree-id241 . -1) (#("i" 0 1 (fontified t)) . -1308) (undo-tree-id242 . -1) (#("z" 0 1 (fontified t)) . -1309) (undo-tree-id243 . -1) (#("e" 0 1 (fontified t)) . -1310) (undo-tree-id244 . -1) (#(":" 0 1 (fontified t)) . -1311) (undo-tree-id245 . -1) (#(" " 0 1 (fontified t)) . -1312) (undo-tree-id246 . -1) (#("7" 0 1 (fontified t)) . -1313) (undo-tree-id247 . -1) 1314) nil (25316 6081 9642 938000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1180) (undo-tree-id320 . -1) (#(" " 0 1 (fontified t)) . -1181) (undo-tree-id321 . -1) (#("s" 0 1 (fontified t)) . -1182) (undo-tree-id322 . -1) (#("i" 0 1 (fontified t)) . -1183) (undo-tree-id323 . -1) (#("z" 0 1 (fontified t)) . -1184) (undo-tree-id324 . -1) (#("e" 0 1 (fontified t)) . -1185) (undo-tree-id325 . -1) (#(":" 0 1 (fontified t)) . -1186) (undo-tree-id326 . -1) (#(" " 0 1 (fontified t)) . -1187) (undo-tree-id327 . -1) (#("2" 0 1 (fontified t)) . -1188) (undo-tree-id328 . -1) 1189 (t 25316 6081 15606 361000)) nil (25316 6137 166791 786000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1416) (undo-tree-id329 . -1) (#(" " 0 1 (fontified t)) . -1417) (undo-tree-id330 . -1) (#("s" 0 1 (fontified t)) . -1418) (undo-tree-id331 . -1) (#("i" 0 1 (fontified t)) . -1419) (undo-tree-id332 . -1) (#("z" 0 1 (fontified t)) . -1420) (undo-tree-id333 . -1) (#("e" 0 1 (fontified t)) . -1421) (undo-tree-id334 . -1) (#(":" 0 1 (fontified t)) . -1422) (undo-tree-id335 . -1) (#(" " 0 1 (fontified t)) . -1423) (undo-tree-id336 . -1) (#("1" 0 1 (fontified t)) . -1424) (undo-tree-id337 . -1) 1425 (t 25316 6137 185736 433000)) nil (25316 6147 414504 449000) 0 nil])
([nil nil ((1425 . 1427) (#("  " 0 2 (fontified t)) . 1424) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (1423 . 1427) (t 25316 6147 425402 128000)) nil (25317 28988 150271 4000) 0 nil])
([nil nil ((1426 . 1428) (#("  " 0 2 (fontified t)) . 1425) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (1427 . 1428)) nil (25317 28988 150260 664000) 0 nil])
([nil nil ((1426 . 1428) (#("  " 0 2 (fontified nil)) . 1425) (1425 . 1427) (1425 . 1426)) nil (25317 28988 150226 981000) 0 nil])
([nil nil ((#("  use Ecto.Schema

  import Ecto.Changeset
  import Ecto.Query, only: [from: 2]
  import Goliath.Gettext

  alias Goliath.Credits
  alias Goliath.Credits.Charges
  alias Goliath.User
  alias Goliath.User.Intelligential
  alias Goliath.Repo

  @required_fields [
    :loan_code,
    :plan_number,
    :quota_sec,
    :start_date,
    :quota_delayed_days,
    :quota_state,
    :balance_sub_code,
    :delayed_quota_history_days,
    :prevision_amount,
    :INTE_adjust
  ]
  @optional_fields [:due_date, :last_quota_state, :last_payment_date, :bill_number]

  schema \"quota\" do
    field(:loan_code, :string)
    field(:plan_number, :integer, default: 0)
    field(:quota_sec, :integer, default: 0)
    field(:start_date, :date)
    field(:due_date, :date)
    field(:payment_date, :date)
    field(:quota_delayed_days, :integer, default: 0)
    field(:quota_state, :string)
    field(:balance_sub_code, :string)
    field(:delayed_quota_history_days, :integer)
    field(:last_quota_state, :string)
    field(:last_payment_date, :date)
    field(:last_state_sub_code, :string)
    field(:prevision_amount, :decimal, default: 0.00)
    field(:INTE_adjust, :binary)
    field(:bill_number, :string)
  end

" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 17 (fontified t face font-lock-type-face) 17 21 (fontified t) 21 27 (fontified t face font-lock-keyword-face) 27 28 (fontified t) 28 42 (fontified t face font-lock-type-face) 42 45 (fontified t) 45 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 62 (fontified t face font-lock-type-face) 62 64 (fontified t) 64 69 (fontified t face elixir-atom-face) 69 71 (fontified t) 71 76 (fontified t face elixir-atom-face) 76 82 (fontified t) 82 88 (fontified t face font-lock-keyword-face) 88 89 (fontified t) 89 104 (fontified t face font-lock-type-face) 104 108 (fontified t) 108 113 (fontified t face font-lock-keyword-face) 113 114 (fontified t) 114 129 (fontified t face font-lock-type-face) 129 132 (fontified t) 132 137 (fontified t face font-lock-keyword-face) 137 138 (fontified t) 138 161 (fontified t face font-lock-type-face) 161 164 (fontified t) 164 169 (fontified t face font-lock-keyword-face) 169 170 (fontified t) 170 182 (fontified t face font-lock-type-face) 182 185 (fontified t) 185 190 (fontified t face font-lock-keyword-face) 190 191 (fontified t) 191 218 (fontified t face font-lock-type-face) 218 221 (fontified t) 221 226 (fontified t face font-lock-keyword-face) 226 227 (fontified t) 227 239 (fontified t face font-lock-type-face) 239 243 (fontified t) 243 259 (fontified t face elixir-attribute-face) 259 266 (fontified t) 266 276 (fontified t face elixir-atom-face) 276 280 (fontified t) 280 282 (fontified t) 282 294 (fontified t face elixir-atom-face) 294 296 (fontified t) 296 300 (fontified t) 300 310 (fontified t face elixir-atom-face) 310 316 (fontified t) 316 327 (fontified t face elixir-atom-face) 327 333 (fontified t) 333 352 (fontified t face elixir-atom-face) 352 358 (fontified t) 358 370 (fontified t face elixir-atom-face) 370 376 (fontified t) 376 393 (fontified t face elixir-atom-face) 393 399 (fontified t) 399 426 (fontified t face elixir-atom-face) 426 432 (fontified t) 432 449 (fontified t face elixir-atom-face) 449 455 (fontified t) 455 467 (fontified t face elixir-atom-face) 467 474 (fontified t) 474 490 (fontified t face elixir-attribute-face) 490 492 (fontified t) 492 501 (fontified t face elixir-atom-face) 501 503 (fontified t) 503 520 (fontified t face elixir-atom-face) 520 522 (fontified t) 522 540 (fontified t face elixir-atom-face) 540 542 (fontified t) 542 554 (fontified t face elixir-atom-face) 554 566 (fontified t) 566 567 (fontified t syntax-table (15) face font-lock-string-face) 567 572 (fontified t face font-lock-string-face) 572 573 (fontified t syntax-table (15) face font-lock-string-face) 573 574 (fontified t) 574 576 (fontified t face font-lock-keyword-face) 576 587 (fontified t) 587 597 (fontified t face elixir-atom-face) 597 599 (fontified t) 599 606 (fontified t face elixir-atom-face) 606 618 (fontified t) 618 630 (fontified t face elixir-atom-face) 630 632 (fontified t) 632 640 (fontified t face elixir-atom-face) 640 642 (fontified t) 642 650 (fontified t face elixir-atom-face) 650 664 (fontified t) 664 674 (fontified t face elixir-atom-face) 674 676 (fontified t) 676 684 (fontified t face elixir-atom-face) 684 686 (fontified t) 686 694 (fontified t face elixir-atom-face) 694 708 (fontified t) 708 719 (fontified t face elixir-atom-face) 719 721 (fontified t) 721 726 (fontified t face elixir-atom-face) 726 738 (fontified t) 738 747 (fontified t face elixir-atom-face) 747 749 (fontified t) 749 754 (fontified t face elixir-atom-face) 754 766 (fontified t) 766 779 (fontified t face elixir-atom-face) 779 781 (fontified t) 781 786 (fontified t face elixir-atom-face) 786 796 (fontified t) 796 798 (fontified t) 798 817 (fontified t face elixir-atom-face) 817 819 (fontified t) 819 827 (fontified t face elixir-atom-face) 827 829 (fontified t) 829 837 (fontified t face elixir-atom-face) 837 841 (fontified t) 841 851 (fontified t) 851 863 (fontified t face elixir-atom-face) 863 865 (fontified t) 865 872 (fontified t face elixir-atom-face) 872 884 (fontified t) 884 901 (fontified t face elixir-atom-face) 901 903 (fontified t) 903 910 (fontified t face elixir-atom-face) 910 922 (fontified t) 922 949 (fontified t face elixir-atom-face) 949 951 (fontified t) 951 959 (fontified t face elixir-atom-face) 959 971 (fontified t) 971 988 (fontified t face elixir-atom-face) 988 990 (fontified t) 990 997 (fontified t face elixir-atom-face) 997 1009 (fontified t) 1009 1027 (fontified t face elixir-atom-face) 1027 1029 (fontified t) 1029 1034 (fontified t face elixir-atom-face) 1034 1046 (fontified t) 1046 1066 (fontified t face elixir-atom-face) 1066 1068 (fontified t) 1068 1075 (fontified t face elixir-atom-face) 1075 1087 (fontified t) 1087 1104 (fontified t face elixir-atom-face) 1104 1106 (fontified t) 1106 1114 (fontified t face elixir-atom-face) 1114 1116 (fontified t) 1116 1124 (fontified t face elixir-atom-face) 1124 1141 (fontified t) 1141 1153 (fontified t face elixir-atom-face) 1153 1155 (fontified t) 1155 1162 (fontified t face elixir-atom-face) 1162 1174 (fontified t) 1174 1186 (fontified t face elixir-atom-face) 1186 1188 (fontified t) 1188 1195 (fontified t face elixir-atom-face) 1195 1199 (fontified t) 1199 1202 (fontified t face font-lock-keyword-face) 1202 1204 (fontified t)) . 221) (undo-tree-id3 . -1204) (undo-tree-id4 . -1204) (undo-tree-id5 . -1204) (undo-tree-id6 . -372) (undo-tree-id7 . -1204) (undo-tree-id8 . -1204) 1425 (t 25317 28988 155445 511000)) nil (25319 4217 971520 209000) 0 nil])
([nil nil ((221 . 229)) nil (25319 4217 971507 655000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-function-name-face)) . -227) (undo-tree-id1 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -228) (undo-tree-id2 . -1) 229) nil (25319 4217 971504 560000) 0 nil])
([nil nil ((227 . 231)) nil (25319 4217 971497 546000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-function-name-face)) . -230) (undo-tree-id0 . -1) 231) nil (25319 4217 971493 809000) 0 nil])
([nil nil ((230 . 234)) nil (25319 4217 971471 197000) 0 nil])
([nil nil ((234 . 237)) nil (25319 4217 971468 973000) 0 nil])
([nil nil ((237 . 242)) nil (25319 4217 971466 638000) 0 nil])
([nil nil ((242 . 248)) nil (25319 4217 971463 452000) 0 nil])
([nil current ((251 . 254)) nil (25319 4217 971455 958000) 0 nil])
nil
